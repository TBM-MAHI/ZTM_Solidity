{
	"id": "e6394e11dfd1602f3f4b035c3fb64478",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/Enums.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.21;\r\n contract Enum {\r\n    enum  Stages{\r\n        Init, //0\r\n        Start,//1\r\n        Middle,//2\r\n        End //3\r\n    }\r\n    //default enum is 0\r\n    Stages public stage;\r\n\r\n   /* Progressin through differnt staegs of the smart contarct \r\n    using ENUMS */\r\n    function init() external {\r\n        require(stage==Stages.Init);\r\n        //Do stuff here then progress to the next stage\r\n        stage = Stages.Start;\r\n    }\r\n\r\n    function start() external {\r\n        require(stage==Stages.Start);\r\n         //Do stuff here then progress to the next stage\r\n        stage = Stages.Middle;\r\n    }\r\n\r\n    function continuing() external {\r\n        require(stage==Stages.Middle);\r\n         //Do stuff here then progress to the next stage\r\n        stage = Stages.End;\r\n    }\r\n    function end() external view {\r\n        require(stage==Stages.End);\r\n         //Do stuff here then progress to the next stage\r\n       \r\n    }\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Contracts/Enums.sol": {
				"Enum": {
					"abi": [
						{
							"inputs": [],
							"name": "continuing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum Enum.Stages",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Enums.sol\":60:975  contract Enum {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Enums.sol\":60:975  contract Enum {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x124f74ed\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Enums.sol\":658:824  function continuing() external {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Contracts/Enums.sol\":487:650  function start() external {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Contracts/Enums.sol\":207:226  Stages public stage */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Enums.sol\":320:479  function init() external {... */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Contracts/Enums.sol\":830:971  function end() external view {... */\n    tag_7:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Contracts/Enums.sol\":658:824  function continuing() external {... */\n    tag_9:\n        /* \"Contracts/Enums.sol\":715:728  Stages.Middle */\n      0x02\n        /* \"Contracts/Enums.sol\":708:728  stage==Stages.Middle */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"Contracts/Enums.sol\":708:713  stage */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/Enums.sol\":708:728  stage==Stages.Middle */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      tag_25\n      tag_23\n      jump\t// in\n    tag_25:\n    tag_24:\n      eq\n        /* \"Contracts/Enums.sol\":700:729  require(stage==Stages.Middle) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"Contracts/Enums.sol\":806:816  Stages.End */\n      0x03\n        /* \"Contracts/Enums.sol\":798:803  stage */\n      0x00\n      dup1\n        /* \"Contracts/Enums.sol\":798:816  stage = Stages.End */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_23\n      jump\t// in\n    tag_28:\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Enums.sol\":658:824  function continuing() external {... */\n      jump\t// out\n        /* \"Contracts/Enums.sol\":487:650  function start() external {... */\n    tag_11:\n        /* \"Contracts/Enums.sol\":539:551  Stages.Start */\n      0x01\n        /* \"Contracts/Enums.sol\":532:551  stage==Stages.Start */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_23\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"Contracts/Enums.sol\":532:537  stage */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/Enums.sol\":532:551  stage==Stages.Start */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      tag_33\n      tag_23\n      jump\t// in\n    tag_33:\n    tag_32:\n      eq\n        /* \"Contracts/Enums.sol\":524:552  require(stage==Stages.Start) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"Contracts/Enums.sol\":629:642  Stages.Middle */\n      0x02\n        /* \"Contracts/Enums.sol\":621:626  stage */\n      0x00\n      dup1\n        /* \"Contracts/Enums.sol\":621:642  stage = Stages.Middle */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_36\n      tag_23\n      jump\t// in\n    tag_36:\n    tag_35:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Enums.sol\":487:650  function start() external {... */\n      jump\t// out\n        /* \"Contracts/Enums.sol\":207:226  Stages public stage */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Contracts/Enums.sol\":320:479  function init() external {... */\n    tag_17:\n        /* \"Contracts/Enums.sol\":371:382  Stages.Init */\n      0x00\n        /* \"Contracts/Enums.sol\":364:382  stage==Stages.Init */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      tag_39\n      tag_23\n      jump\t// in\n    tag_39:\n    tag_38:\n        /* \"Contracts/Enums.sol\":364:369  stage */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/Enums.sol\":364:382  stage==Stages.Init */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_23\n      jump\t// in\n    tag_41:\n    tag_40:\n      eq\n        /* \"Contracts/Enums.sol\":356:383  require(stage==Stages.Init) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"Contracts/Enums.sol\":459:471  Stages.Start */\n      0x01\n        /* \"Contracts/Enums.sol\":451:456  stage */\n      0x00\n      dup1\n        /* \"Contracts/Enums.sol\":451:471  stage = Stages.Start */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_23\n      jump\t// in\n    tag_44:\n    tag_43:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Enums.sol\":320:479  function init() external {... */\n      jump\t// out\n        /* \"Contracts/Enums.sol\":830:971  function end() external view {... */\n    tag_19:\n        /* \"Contracts/Enums.sol\":885:895  Stages.End */\n      0x03\n        /* \"Contracts/Enums.sol\":878:895  stage==Stages.End */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      tag_47\n      tag_23\n      jump\t// in\n    tag_47:\n    tag_46:\n        /* \"Contracts/Enums.sol\":878:883  stage */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/Enums.sol\":878:895  stage==Stages.End */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      tag_49\n      tag_23\n      jump\t// in\n    tag_49:\n    tag_48:\n      eq\n        /* \"Contracts/Enums.sol\":870:896  require(stage==Stages.End) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"Contracts/Enums.sol\":830:971  function end() external view {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_23:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:306   */\n    tag_51:\n        /* \"#utility.yul\":274:275   */\n      0x04\n        /* \"#utility.yul\":267:272   */\n      dup2\n        /* \"#utility.yul\":264:276   */\n      lt\n        /* \"#utility.yul\":254:300   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":280:298   */\n      tag_59\n      tag_23\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":254:300   */\n    tag_58:\n        /* \"#utility.yul\":193:306   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":312:439   */\n    tag_52:\n        /* \"#utility.yul\":357:364   */\n      0x00\n        /* \"#utility.yul\":386:391   */\n      dup2\n        /* \"#utility.yul\":375:391   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:433   */\n      tag_61\n        /* \"#utility.yul\":427:432   */\n      dup3\n        /* \"#utility.yul\":392:433   */\n      tag_51\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":312:439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":445:572   */\n    tag_53:\n        /* \"#utility.yul\":501:510   */\n      0x00\n        /* \"#utility.yul\":534:566   */\n      tag_63\n        /* \"#utility.yul\":560:565   */\n      dup3\n        /* \"#utility.yul\":534:566   */\n      tag_52\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":521:566   */\n      swap1\n      pop\n        /* \"#utility.yul\":445:572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":578:721   */\n    tag_54:\n        /* \"#utility.yul\":671:714   */\n      tag_65\n        /* \"#utility.yul\":708:713   */\n      dup2\n        /* \"#utility.yul\":671:714   */\n      tag_53\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":666:669   */\n      dup3\n        /* \"#utility.yul\":659:715   */\n      mstore\n        /* \"#utility.yul\":578:721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":727:961   */\n    tag_15:\n        /* \"#utility.yul\":826:830   */\n      0x00\n        /* \"#utility.yul\":864:866   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":849:867   */\n      add\n        /* \"#utility.yul\":841:867   */\n      swap1\n      pop\n        /* \"#utility.yul\":877:954   */\n      tag_67\n        /* \"#utility.yul\":951:952   */\n      0x00\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":936:953   */\n      add\n        /* \"#utility.yul\":927:933   */\n      dup5\n        /* \"#utility.yul\":877:954   */\n      tag_54\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":727:961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122069d24e085fec91880832a575952f2666e299f8f13eeca11453274800b19d6e9464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102e28061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063124f74ed14610059578063be9a655514610063578063c040e6b81461006d578063e1c7392a1461008b578063efbe1c1c14610095575b5f80fd5b61006161009f565b005b61006b610106565b005b61007561016d565b6040516100829190610293565b60405180910390f35b61009361017d565b005b61009d6101e3565b005b600260038111156100b3576100b2610220565b5b5f8054906101000a900460ff1660038111156100d2576100d1610220565b5b146100db575f80fd5b60035f806101000a81548160ff021916908360038111156100ff576100fe610220565b5b0217905550565b6001600381111561011a57610119610220565b5b5f8054906101000a900460ff16600381111561013957610138610220565b5b14610142575f80fd5b60025f806101000a81548160ff0219169083600381111561016657610165610220565b5b0217905550565b5f8054906101000a900460ff1681565b5f60038111156101905761018f610220565b5b5f8054906101000a900460ff1660038111156101af576101ae610220565b5b146101b8575f80fd5b60015f806101000a81548160ff021916908360038111156101dc576101db610220565b5b0217905550565b6003808111156101f6576101f5610220565b5b5f8054906101000a900460ff16600381111561021557610214610220565b5b1461021e575f80fd5b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061025e5761025d610220565b5b50565b5f81905061026e8261024d565b919050565b5f61027d82610261565b9050919050565b61028d81610273565b82525050565b5f6020820190506102a65f830184610284565b9291505056fea264697066735822122069d24e085fec91880832a575952f2666e299f8f13eeca11453274800b19d6e9464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x124F74ED EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x95 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x17D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB3 JUMPI PUSH2 0xB2 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH2 0xD1 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x142 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x190 JUMPI PUSH2 0x18F PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x1AE PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0x220 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x26E DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27D DUP3 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D DUP2 PUSH2 0x273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xD24E085FEC91880832A5 PUSH22 0x952F2666E299F8F13EECA11453274800B19D6E946473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "60:915:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@continuing_57": {
									"entryPoint": 159,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@end_68": {
									"entryPoint": 483,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@init_25": {
									"entryPoint": 381,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stage_9": {
									"entryPoint": 365,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@start_41": {
									"entryPoint": 262,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Stages_$6_to_t_uint8_fromStack": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_Stages_$6__to_t_uint8__fromStack_reversed": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Stages_$6": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Stages_$6_to_t_uint8": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Stages_$6": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:964:1",
										"nodeType": "YulBlock",
										"src": "0:964:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "244:62:1",
													"nodeType": "YulBlock",
													"src": "244:62:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "278:22:1",
																"nodeType": "YulBlock",
																"src": "278:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "280:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "280:16:1"
																			},
																			"nativeSrc": "280:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "280:18:1"
																		},
																		"nativeSrc": "280:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "280:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "267:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "267:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "274:1:1",
																				"nodeType": "YulLiteral",
																				"src": "274:1:1",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "264:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "264:2:1"
																		},
																		"nativeSrc": "264:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "264:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "257:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "257:6:1"
																},
																"nativeSrc": "257:20:1",
																"nodeType": "YulFunctionCall",
																"src": "257:20:1"
															},
															"nativeSrc": "254:46:1",
															"nodeType": "YulIf",
															"src": "254:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Stages_$6",
												"nativeSrc": "193:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "237:5:1",
														"nodeType": "YulTypedName",
														"src": "237:5:1",
														"type": ""
													}
												],
												"src": "193:113:1"
											},
											{
												"body": {
													"nativeSrc": "365:74:1",
													"nodeType": "YulBlock",
													"src": "365:74:1",
													"statements": [
														{
															"nativeSrc": "375:16:1",
															"nodeType": "YulAssignment",
															"src": "375:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "386:5:1",
																"nodeType": "YulIdentifier",
																"src": "386:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "375:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "375:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "427:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "427:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Stages_$6",
																	"nativeSrc": "392:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:34:1"
																},
																"nativeSrc": "392:41:1",
																"nodeType": "YulFunctionCall",
																"src": "392:41:1"
															},
															"nativeSrc": "392:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:41:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Stages_$6",
												"nativeSrc": "312:127:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "347:5:1",
														"nodeType": "YulTypedName",
														"src": "347:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "357:7:1",
														"nodeType": "YulTypedName",
														"src": "357:7:1",
														"type": ""
													}
												],
												"src": "312:127:1"
											},
											{
												"body": {
													"nativeSrc": "511:61:1",
													"nodeType": "YulBlock",
													"src": "511:61:1",
													"statements": [
														{
															"nativeSrc": "521:45:1",
															"nodeType": "YulAssignment",
															"src": "521:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "560:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "560:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Stages_$6",
																	"nativeSrc": "534:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "534:25:1"
																},
																"nativeSrc": "534:32:1",
																"nodeType": "YulFunctionCall",
																"src": "534:32:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "521:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Stages_$6_to_t_uint8",
												"nativeSrc": "445:127:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "491:5:1",
														"nodeType": "YulTypedName",
														"src": "491:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "501:9:1",
														"nodeType": "YulTypedName",
														"src": "501:9:1",
														"type": ""
													}
												],
												"src": "445:127:1"
											},
											{
												"body": {
													"nativeSrc": "649:72:1",
													"nodeType": "YulBlock",
													"src": "649:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "666:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "666:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "708:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "708:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Stages_$6_to_t_uint8",
																			"nativeSrc": "671:36:1",
																			"nodeType": "YulIdentifier",
																			"src": "671:36:1"
																		},
																		"nativeSrc": "671:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "671:43:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "659:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:1"
																},
																"nativeSrc": "659:56:1",
																"nodeType": "YulFunctionCall",
																"src": "659:56:1"
															},
															"nativeSrc": "659:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "659:56:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Stages_$6_to_t_uint8_fromStack",
												"nativeSrc": "578:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "637:5:1",
														"nodeType": "YulTypedName",
														"src": "637:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "644:3:1",
														"nodeType": "YulTypedName",
														"src": "644:3:1",
														"type": ""
													}
												],
												"src": "578:143:1"
											},
											{
												"body": {
													"nativeSrc": "831:130:1",
													"nodeType": "YulBlock",
													"src": "831:130:1",
													"statements": [
														{
															"nativeSrc": "841:26:1",
															"nodeType": "YulAssignment",
															"src": "841:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "853:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "853:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:2:1",
																		"nodeType": "YulLiteral",
																		"src": "864:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "849:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "849:3:1"
																},
																"nativeSrc": "849:18:1",
																"nodeType": "YulFunctionCall",
																"src": "849:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "841:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "841:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "927:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:1:1",
																				"nodeType": "YulLiteral",
																				"src": "951:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "936:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "936:3:1"
																		},
																		"nativeSrc": "936:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "936:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Stages_$6_to_t_uint8_fromStack",
																	"nativeSrc": "877:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "877:49:1"
																},
																"nativeSrc": "877:77:1",
																"nodeType": "YulFunctionCall",
																"src": "877:77:1"
															},
															"nativeSrc": "877:77:1",
															"nodeType": "YulExpressionStatement",
															"src": "877:77:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Stages_$6__to_t_uint8__fromStack_reversed",
												"nativeSrc": "727:234:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "803:9:1",
														"nodeType": "YulTypedName",
														"src": "803:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "815:6:1",
														"nodeType": "YulTypedName",
														"src": "815:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "826:4:1",
														"nodeType": "YulTypedName",
														"src": "826:4:1",
														"type": ""
													}
												],
												"src": "727:234:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Stages_$6(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Stages_$6(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stages_$6(value)\n    }\n\n    function convert_t_enum$_Stages_$6_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stages_$6(value)\n    }\n\n    function abi_encode_t_enum$_Stages_$6_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stages_$6_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Stages_$6__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stages_$6_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063124f74ed14610059578063be9a655514610063578063c040e6b81461006d578063e1c7392a1461008b578063efbe1c1c14610095575b5f80fd5b61006161009f565b005b61006b610106565b005b61007561016d565b6040516100829190610293565b60405180910390f35b61009361017d565b005b61009d6101e3565b005b600260038111156100b3576100b2610220565b5b5f8054906101000a900460ff1660038111156100d2576100d1610220565b5b146100db575f80fd5b60035f806101000a81548160ff021916908360038111156100ff576100fe610220565b5b0217905550565b6001600381111561011a57610119610220565b5b5f8054906101000a900460ff16600381111561013957610138610220565b5b14610142575f80fd5b60025f806101000a81548160ff0219169083600381111561016657610165610220565b5b0217905550565b5f8054906101000a900460ff1681565b5f60038111156101905761018f610220565b5b5f8054906101000a900460ff1660038111156101af576101ae610220565b5b146101b8575f80fd5b60015f806101000a81548160ff021916908360038111156101dc576101db610220565b5b0217905550565b6003808111156101f6576101f5610220565b5b5f8054906101000a900460ff16600381111561021557610214610220565b5b1461021e575f80fd5b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061025e5761025d610220565b5b50565b5f81905061026e8261024d565b919050565b5f61027d82610261565b9050919050565b61028d81610273565b82525050565b5f6020820190506102a65f830184610284565b9291505056fea264697066735822122069d24e085fec91880832a575952f2666e299f8f13eeca11453274800b19d6e9464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x124F74ED EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x95 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x106 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x17D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB3 JUMPI PUSH2 0xB2 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD2 JUMPI PUSH2 0xD1 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x142 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH2 0x165 PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x190 JUMPI PUSH2 0x18F PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x1AE PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x220 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x220 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x220 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0x220 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x26E DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27D DUP3 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D DUP2 PUSH2 0x273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xD24E085FEC91880832A5 PUSH22 0x952F2666E299F8F13EECA11453274800B19D6E946473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "60:915:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:166;;;:::i;:::-;;487:163;;;:::i;:::-;;207:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:159;;;:::i;:::-;;830:141;;;:::i;:::-;;658:166;715:13;708:20;;;;;;;;:::i;:::-;;:5;;;;;;;;;;:20;;;;;;;;:::i;:::-;;;700:29;;;;;;806:10;798:5;;:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;658:166::o;487:163::-;539:12;532:19;;;;;;;;:::i;:::-;;:5;;;;;;;;;;:19;;;;;;;;:::i;:::-;;;524:28;;;;;;629:13;621:5;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;487:163::o;207:19::-;;;;;;;;;;;;:::o;320:159::-;371:11;364:18;;;;;;;;:::i;:::-;;:5;;;;;;;;;;:18;;;;;;;;:::i;:::-;;;356:27;;;;;;459:12;451:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;320:159::o;830:141::-;885:10;878:17;;;;;;;;:::i;:::-;;:5;;;;;;;;;;:17;;;;;;;;:::i;:::-;;;870:26;;;;;;830:141::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:113;274:1;267:5;264:12;254:46;;280:18;;:::i;:::-;254:46;193:113;:::o;312:127::-;357:7;386:5;375:16;;392:41;427:5;392:41;:::i;:::-;312:127;;;:::o;445:::-;501:9;534:32;560:5;534:32;:::i;:::-;521:45;;445:127;;;:::o;578:143::-;671:43;708:5;671:43;:::i;:::-;666:3;659:56;578:143;;:::o;727:234::-;826:4;864:2;853:9;849:18;841:26;;877:77;951:1;940:9;936:17;927:6;877:77;:::i;:::-;727:234;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "147600",
								"executionCost": "194",
								"totalCost": "147794"
							},
							"external": {
								"continuing()": "26614",
								"end()": "2426",
								"init()": "26679",
								"stage()": "2573",
								"start()": "26636"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 975,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069d24e085fec91880832a575952f2666e299f8f13eeca11453274800b19d6e9464736f6c63430008150033",
									".code": [
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "124F74ED"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "C040E6B8"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "E1C7392A"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "EFBE1C1C"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 658,
											"end": 824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 658,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 658,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 658,
											"end": 824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 487,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 207,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 320,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 320,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 320,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 320,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 830,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 830,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 830,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 830,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 658,
											"end": 824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 708,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 708,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 708,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 700,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 700,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 700,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 806,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 798,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 798,
											"end": 816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 487,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 532,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 532,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 524,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 524,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 524,
											"end": 552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 524,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 621,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 621,
											"end": 642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 207,
											"end": 226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 320,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 364,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 364,
											"end": 369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 364,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 364,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 364,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 356,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 356,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 356,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 356,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 356,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 451,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 451,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 451,
											"end": 471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 830,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 885,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 878,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 878,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 878,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 878,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 870,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 870,
											"end": 896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 870,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 870,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 870,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 193,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 276,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 254,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 280,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 280,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 280,
											"end": 298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 298,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 280,
											"end": 298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 254,
											"end": 300,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 254,
											"end": 300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 439,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 312,
											"end": 439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 375,
											"end": 391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 375,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 427,
											"end": 432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 392,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 392,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 392,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 445,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 534,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 534,
											"end": 566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 534,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 534,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 578,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 671,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 671,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 671,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 671,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 666,
											"end": 669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 659,
											"end": 715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 578,
											"end": 721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 727,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 849,
											"end": 867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 841,
											"end": 867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 936,
											"end": 953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 877,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 877,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 877,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Contracts/Enums.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"continuing()": "124f74ed",
							"end()": "efbe1c1c",
							"init()": "e1c7392a",
							"stage()": "c040e6b8",
							"start()": "be9a6555"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"continuing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum Enum.Stages\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Enums.sol\":\"Enum\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Enums.sol\":{\"keccak256\":\"0x27067de35f606d3cde499e53082bd0606096baf2e887b34e9707bfacf82b8267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3529c7db515e6207846f582846aef8fbd26dcfca7c94de2041cc5a2343d649d8\",\"dweb:/ipfs/Qmbk9YdyYdM2Rte42Q2ZyjyuVFR4UGyPcQYXQaepFoQBbK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "Contracts/Enums.sol:Enum",
								"label": "stage",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Stages)6"
							}
						],
						"types": {
							"t_enum(Stages)6": {
								"encoding": "inplace",
								"label": "enum Enum.Stages",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/Enums.sol": {
				"ast": {
					"absolutePath": "Contracts/Enums.sol",
					"exportedSymbols": {
						"Enum": [
							69
						]
					},
					"id": 70,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "Enum",
							"nameLocation": "69:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Enum.Stages",
									"id": 6,
									"members": [
										{
											"id": 2,
											"name": "Init",
											"nameLocation": "104:4:0",
											"nodeType": "EnumValue",
											"src": "104:4:0"
										},
										{
											"id": 3,
											"name": "Start",
											"nameLocation": "123:5:0",
											"nodeType": "EnumValue",
											"src": "123:5:0"
										},
										{
											"id": 4,
											"name": "Middle",
											"nameLocation": "142:6:0",
											"nodeType": "EnumValue",
											"src": "142:6:0"
										},
										{
											"id": 5,
											"name": "End",
											"nameLocation": "162:3:0",
											"nodeType": "EnumValue",
											"src": "162:3:0"
										}
									],
									"name": "Stages",
									"nameLocation": "87:6:0",
									"nodeType": "EnumDefinition",
									"src": "81:95:0"
								},
								{
									"constant": false,
									"functionSelector": "c040e6b8",
									"id": 9,
									"mutability": "mutable",
									"name": "stage",
									"nameLocation": "221:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 69,
									"src": "207:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stages_$6",
										"typeString": "enum Enum.Stages"
									},
									"typeName": {
										"id": 8,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 7,
											"name": "Stages",
											"nameLocations": [
												"207:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 6,
											"src": "207:6:0"
										},
										"referencedDeclaration": 6,
										"src": "207:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stages_$6",
											"typeString": "enum Enum.Stages"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "345:134:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum Enum.Stages"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 13,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "364:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 14,
																	"name": "Stages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "371:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																		"typeString": "type(enum Enum.Stages)"
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "378:4:0",
																"memberName": "Init",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2,
																"src": "371:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"src": "364:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "356:27:0"
											},
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "451:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 20,
															"name": "Stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "459:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																"typeString": "type(enum Enum.Stages)"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "466:5:0",
														"memberName": "Start",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "459:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"src": "451:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum Enum.Stages"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "451:20:0"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "329:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:0:0"
									},
									"scope": 69,
									"src": "320:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "513:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum Enum.Stages"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 29,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 30,
																	"name": "Stages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "539:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																		"typeString": "type(enum Enum.Stages)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "546:5:0",
																"memberName": "Start",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "539:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"src": "532:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "524:28:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "621:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "Stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																"typeString": "type(enum Enum.Stages)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "636:6:0",
														"memberName": "Middle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "629:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"src": "621:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum Enum.Stages"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "621:21:0"
											}
										]
									},
									"functionSelector": "be9a6555",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "496:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:0:0"
									},
									"scope": 69,
									"src": "487:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "689:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum Enum.Stages"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 45,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "708:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 46,
																	"name": "Stages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "715:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																		"typeString": "type(enum Enum.Stages)"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "722:6:0",
																"memberName": "Middle",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "715:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"src": "708:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "700:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "700:29:0"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "798:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 52,
															"name": "Stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																"typeString": "type(enum Enum.Stages)"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "813:3:0",
														"memberName": "End",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "806:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stages_$6",
															"typeString": "enum Enum.Stages"
														}
													},
													"src": "798:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stages_$6",
														"typeString": "enum Enum.Stages"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "798:18:0"
											}
										]
									},
									"functionSelector": "124f74ed",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "continuing",
									"nameLocation": "667:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:0"
									},
									"scope": 69,
									"src": "658:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "859:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Stages_$6",
																"typeString": "enum Enum.Stages"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "878:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 62,
																	"name": "Stages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "885:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Stages_$6_$",
																		"typeString": "type(enum Enum.Stages)"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "892:3:0",
																"memberName": "End",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "885:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stages_$6",
																	"typeString": "enum Enum.Stages"
																}
															},
															"src": "878:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "870:26:0"
											}
										]
									},
									"functionSelector": "efbe1c1c",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "end",
									"nameLocation": "839:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:0:0"
									},
									"scope": 69,
									"src": "830:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 70,
							"src": "60:915:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "34:941:0"
				},
				"id": 0
			}
		}
	}
}